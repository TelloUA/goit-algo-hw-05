import random

def binary_float(arr, x):
    """
    Реалізуйте двійковий пошук для відсортованого масиву з дробовими числами. 
    Написана функція для двійкового пошуку повинна повертати кортеж, де першим елементом є кількість ітерацій, 
    потрібних для знаходження елемента. 
    Другим елементом має бути "верхня межа" — це найменший елемент, 
    який є більшим або рівним заданому значенню.
    """

    low = 0
    high = len(arr) - 1
    mid = 0
 
    if x > arr[high]:
        return 0, None # нема елемента більше ніж задане значення
    
    operation = 0
    # high має стати менше low - значить ми знайшли значення
    while high >= low:
        mid = (high + low) // 2

        # якщо x більше за значення посередині списку, ігноруємо ліву половину
        if arr[mid] < x:
            low = mid + 1 
            # якщо число з середнім індексом менше ніж шукаємо, то останнє low - буде наступне після шуканого

        # якщо x менше за значення посередині списку, ігноруємо праву половину
        else: # arr[mid] >= x
            high = mid - 1
 
        operation += 1
    return operation, arr[low]

list = []
for _ in range(15):
    n = round(random.random(), 3)
    list.append(n)

list.sort()
print(list)

result = binary_float(list, 0.35)
print(result)
